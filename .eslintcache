[{"E:\\react-ecommerce\\src\\index.js":"1","E:\\react-ecommerce\\src\\reportWebVitals.js":"2","E:\\react-ecommerce\\src\\App.jsx":"3","E:\\react-ecommerce\\src\\screens\\login\\Login.jsx":"4","E:\\react-ecommerce\\src\\components\\button\\Button.jsx":"5","E:\\react-ecommerce\\src\\contexts\\userContext.js":"6","E:\\react-ecommerce\\src\\containers\\dashboard\\Dashboard.jsx":"7","E:\\react-ecommerce\\src\\components\\navigation\\Navigation.jsx":"8","E:\\react-ecommerce\\src\\screens\\signup\\Signup.jsx":"9","E:\\react-ecommerce\\src\\contexts\\globalVariablesContext.js":"10","E:\\react-ecommerce\\src\\components\\slider\\Slider.jsx":"11","E:\\react-ecommerce\\src\\screens\\shop\\Shop.jsx":"12","E:\\react-ecommerce\\src\\components\\shopItem\\ShopItem.jsx":"13","E:\\react-ecommerce\\src\\reactUtils.js":"14","E:\\react-ecommerce\\src\\screens\\cart\\Cart.jsx":"15","E:\\react-ecommerce\\src\\components\\cartItem\\CartItem.jsx":"16","E:\\react-ecommerce\\src\\screens\\checkout\\Checkout.jsx":"17"},{"size":591,"mtime":1610266329497,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":2730,"mtime":1610632500420,"results":"21","hashOfConfig":"19"},{"size":6519,"mtime":1611148405969,"results":"22","hashOfConfig":"19"},{"size":300,"mtime":1610632989630,"results":"23","hashOfConfig":"19"},{"size":189,"mtime":1610295661196,"results":"24","hashOfConfig":"19"},{"size":1064,"mtime":1610859409552,"results":"25","hashOfConfig":"19"},{"size":1940,"mtime":1610422644157,"results":"26","hashOfConfig":"19"},{"size":8856,"mtime":1610502595485,"results":"27","hashOfConfig":"19"},{"size":221,"mtime":1610598643080,"results":"28","hashOfConfig":"19"},{"size":1625,"mtime":1610687468567,"results":"29","hashOfConfig":"19"},{"size":1312,"mtime":1610808998818,"results":"30","hashOfConfig":"19"},{"size":1515,"mtime":1610804353022,"results":"31","hashOfConfig":"19"},{"size":214,"mtime":1610780297952,"results":"32","hashOfConfig":"19"},{"size":2411,"mtime":1611159819863,"results":"33","hashOfConfig":"19"},{"size":2305,"mtime":1610808327795,"results":"34","hashOfConfig":"19"},{"size":2415,"mtime":1611152089276,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"djfgcf",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"38"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"38"},"E:\\react-ecommerce\\src\\index.js",[],["78","79"],"E:\\react-ecommerce\\src\\reportWebVitals.js",[],"E:\\react-ecommerce\\src\\App.jsx",["80"],"import React, {useEffect, useState} from 'react'\r\nimport './App.css'\r\n\r\nimport Login from './screens/login/Login'\r\nimport Dashboard from './containers/dashboard/Dashboard'\r\nimport Navigation from './components/navigation/Navigation'\r\n\r\nimport UserContext from './contexts/userContext'\r\n\r\nimport {Redirect, Route,Switch} from 'react-router-dom'\r\n\r\nimport cookies from 'js-cookie'\r\nimport axios from 'axios'\r\nimport Signup from './screens/signup/Signup'\r\n\r\nconst App = () => {\r\n\r\n    const [currentUser,setCurrentUser] = useState(null)\r\n\r\n    const authenticateUser = async  () => {\r\n        const userToken = cookies.get('react-ecommerce-user')\r\n        if(currentUser || !userToken) return\r\n        const config = {\r\n            headers: { Authorization: `Bearer ${userToken}` }\r\n        }\r\n\r\n        try\r\n        {\r\n            const response = await axios.post('http://localhost:3001/auth/authenticate',null,config)\r\n            const {data : {signedInUser,userToken}} = response\r\n            cookies.set('react-ecommerce-user',userToken)\r\n            setCurrentUser(signedInUser)\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        authenticateUser()\r\n    },[currentUser])\r\n    \r\n    return(\r\n        <>\r\n            <UserContext.Provider value={{currentUser,setCurrentUser}}>\r\n                <Navigation />\r\n                <Switch>\r\n                    <Route \r\n                        path='/'\r\n                        exact\r\n                        render = {(routeProps) => {\r\n                            return !currentUser ?\r\n                            <Login {...routeProps}/> \r\n                            :\r\n                            <Redirect to='/dashboard/shop' />\r\n                        }}\r\n                    />\r\n                    <Route \r\n                        path = '/dashboard'\r\n                        render={(routeProps)=> {\r\n                            return currentUser ? \r\n                            <Dashboard {...routeProps}/>\r\n                            :\r\n                            <Redirect to='/'/>\r\n                        }} \r\n                    />\r\n                    <Route \r\n                        path = '/signup'\r\n                        exact\r\n                        render = {(routeProps) => {\r\n                            return !currentUser ?\r\n                            <Signup {...routeProps}/> \r\n                            :\r\n                            <Redirect to='/dashboard/shop' />\r\n                        }}\r\n                    />\r\n                        \r\n                </Switch>\r\n            </UserContext.Provider>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","E:\\react-ecommerce\\src\\screens\\login\\Login.jsx",[],"E:\\react-ecommerce\\src\\components\\button\\Button.jsx",[],"E:\\react-ecommerce\\src\\contexts\\userContext.js",[],"E:\\react-ecommerce\\src\\containers\\dashboard\\Dashboard.jsx",[],"E:\\react-ecommerce\\src\\components\\navigation\\Navigation.jsx",[],"E:\\react-ecommerce\\src\\screens\\signup\\Signup.jsx",[],"E:\\react-ecommerce\\src\\contexts\\globalVariablesContext.js",[],"E:\\react-ecommerce\\src\\components\\slider\\Slider.jsx",["81"],"import React,{useEffect, useState} from 'react'\r\nimport './Slider.scss'\r\n\r\nimport sliderImage1 from '../../assets/images/sliderImage1.jpg'\r\nimport sliderImage2 from '../../assets/images/sliderImage2.jpg'\r\nimport sliderImage3 from '../../assets/images/sliderImage3.jpg'\r\n\r\nimport {GoPrimitiveDot} from 'react-icons/go'\r\n\r\nconst Slider = () => {\r\n\r\n    const sliderImages = [sliderImage1,sliderImage2,sliderImage3]\r\n\r\n    const [currentImageIndex,setCurrentImageIndex] = useState(0)\r\n\r\n    useEffect(() => {\r\n        const sliderTimer = setTimeout(() => {\r\n            const nextImageIndex = ((currentImageIndex+1)%sliderImages.length)\r\n            setCurrentImageIndex(nextImageIndex)\r\n        },2000)\r\n\r\n        return () => {\r\n            clearTimeout(sliderTimer)\r\n        }\r\n    },[currentImageIndex])\r\n\r\n    return(\r\n        <div className=\"slider\">\r\n            <img src={sliderImages[currentImageIndex]} alt=\"SliderImage\" className=\"sliderImage\" />\r\n            <div className=\"sliderDots\">\r\n            {\r\n                sliderImages.map((element,index) => (\r\n                    <span className=\"sliderdotIconContainer\" key={index}>\r\n                        <GoPrimitiveDot \r\n                            size='1.5rem' \r\n                            className= 'sliderDotIcon' \r\n                            style = {index === currentImageIndex ? {transform : 'scale(1.2)'} : null}\r\n                            onClick = {() => setCurrentImageIndex(index)}\r\n                        />\r\n                    </span>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Slider","E:\\react-ecommerce\\src\\screens\\shop\\Shop.jsx",["82","83"],"import {useState,useEffect,useContext} from 'react'\r\nimport './Shop.scss'\r\n\r\nimport axios from 'axios'\r\nimport ShopItem from '../../components/shopItem/ShopItem'\r\n\r\nimport GlobalVariableContext from '../../contexts/globalVariablesContext'\r\nimport { getAxiosHeader, getUserToken } from '../../reactUtils'\r\n\r\nconst Shop = () => {\r\n\r\n    const [shopItems,setShopItems] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const {serverDomain} = useContext(GlobalVariableContext)\r\n\r\n    const fetchShopItems = async () => {\r\n        const userToken = getUserToken()\r\n        if(!userToken) return\r\n        const {data} = await axios.get(`${serverDomain}/user/shop`,getAxiosHeader(userToken))\r\n        setShopItems(data)\r\n        setLoading(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShopItems()\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"shop\">\r\n            <div className=\"shopHeader\">\r\n                <h1 className=\"shopTitle\">Explore our wide variety of cakes</h1>\r\n            </div>\r\n            <div className=\"shopBody\">\r\n                {\r\n                    shopItems.map((item,index) => {\r\n                        return <ShopItem key={index} item={item}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop","E:\\react-ecommerce\\src\\components\\shopItem\\ShopItem.jsx",[],["84","85"],"E:\\react-ecommerce\\src\\reactUtils.js",[],"E:\\react-ecommerce\\src\\screens\\cart\\Cart.jsx",["86","87"],"import {useState,useEffect,useContext} from 'react'\r\nimport './Cart.scss'\r\n\r\nimport {getUserToken,getAxiosHeader} from '../../reactUtils'\r\n\r\nimport GlobalVariableContext from '../../contexts/globalVariablesContext'\r\n\r\nimport axios from 'axios'\r\nimport CartItem from '../../components/cartItem/CartItem'\r\nimport Button from '../../components/button/Button'\r\n\r\nconst Cart = (props) => {\r\n\r\n    const {history : {push}} = props\r\n\r\n    const [cartItems,setCartItems] = useState([])\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    const {serverDomain} = useContext(GlobalVariableContext)\r\n\r\n    useEffect(() => {\r\n        fetchCartItems()\r\n    },[])\r\n\r\n    const fetchCartItems = async () => {\r\n        try\r\n        {\r\n            const userToken = getUserToken()\r\n            if(!userToken)\r\n            {\r\n                return\r\n            }\r\n            const {data} = await axios.get(`${serverDomain}/user/cart`,getAxiosHeader(userToken))\r\n            setCartItems(data)\r\n            setLoading(false)\r\n        }\r\n        catch(error)\r\n        {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const [totalItems,totalPrice] = cartItems.reduce((acc,item) => {\r\n        const {quantity,price} = item\r\n        acc[0] += quantity\r\n        acc[1] += quantity * price\r\n        return acc\r\n    },[0,0])\r\n\r\n    return(\r\n        <div className=\"cart\">\r\n            <div className=\"cartHeader\">\r\n                <div className=\"cartHead\">\r\n                    YOUR CART <span className=\"cartItemsCount\"> {totalItems}{totalItems > 1 ? ' ITEMS ' : ' ITEM '}, ₹ {totalPrice}</span>\r\n                </div>\r\n                {\r\n                    totalPrice ? \r\n                    <div className=\"cartCheckout\">\r\n                        <Button value='Checkout' type='button' onClick = {() => push('/dashboard/cart/checkout',{totalPrice,totalItems})}/>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n            </div>\r\n            <div className=\"cartItems\">\r\n            {\r\n                cartItems.map((cartItem,index) => {\r\n                    return <CartItem \r\n                        cartItem = {cartItem} \r\n                        key = {cartItem.id + index}\r\n                        fetchCartItems = {fetchCartItems}\r\n                    />\r\n                })\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cart","E:\\react-ecommerce\\src\\components\\cartItem\\CartItem.jsx",["88"],"import axios from 'axios'\r\nimport {useState,useContext,useRef, useEffect} from 'react'\r\nimport './CartItem.scss'\r\n\r\nimport GlobalVariableContext from '../../contexts/globalVariablesContext'\r\nimport { getAxiosHeader, getUserToken } from '../../reactUtils'\r\n\r\nconst CartItem = (props) => {\r\n\r\n    const {cartItem : {id,quantity,name,description,price},fetchCartItems} = props\r\n\r\n    const {serverDomain} = useContext(GlobalVariableContext)\r\n    const updateHook = useRef(false)\r\n\r\n    const [itemQuantity,setItemQuantity] = useState(quantity)\r\n\r\n    useEffect(() => {\r\n        if(updateHook.current)\r\n        {\r\n            changeQuantity()\r\n        }\r\n        else\r\n        {\r\n            updateHook.current = true\r\n        }\r\n    },[itemQuantity])\r\n\r\n    const changeQuantity = async () => {\r\n        const userToken = getUserToken()\r\n        if(!userToken) return\r\n        await axios.put(`${serverDomain}/user/changeQuantity`,{\r\n            quantity : itemQuantity,\r\n            itemId : id\r\n        },getAxiosHeader(userToken))\r\n        fetchCartItems()\r\n    }\r\n\r\n\r\n    const handleQuantityChange = (event) => {\r\n        const value = event.target.value\r\n        setItemQuantity(parseInt(value))\r\n    }\r\n\r\n    return (\r\n        <div className=\"cartItem\">\r\n            <img src={`${serverDomain}/user/itemImage/${id}`} alt=\"itemImage\" className=\"cartImage\"/>\r\n            <div className=\"itemDetail\">\r\n                <h2 className=\"itemName\">{name}</h2>\r\n                <p className=\"itemDescription\">{description}</p>\r\n            </div>\r\n            <div className=\"itemRequirement\">\r\n                <select name=\"itemQuantity\" className=\"itemQuantity\" defaultValue={quantity.toString()} onChange={handleQuantityChange}>\r\n                    <option value=\"1\" className=\"itemQuantityOption\">1</option>\r\n                    <option value=\"2\" className=\"itemQuantityOption\">2</option>\r\n                    <option value=\"3\" className=\"itemQuantityOption\">3</option>\r\n                    <option value=\"4\" className=\"itemQuantityOption\">4</option>\r\n                    <option value=\"5\" className=\"itemQuantityOption\">5</option>\r\n                </select>\r\n                <div className=\"itemPrice\">₹ {quantity * price}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItem","E:\\react-ecommerce\\src\\screens\\checkout\\Checkout.jsx",["89"],"import axios from 'axios'\r\nimport {useEffect,useRef,useContext} from 'react'\r\nimport GlobalVariableContext from '../../contexts/globalVariablesContext'\r\nimport { getAxiosHeader, getUserToken } from '../../reactUtils'\r\nimport './Checkout.scss'\r\n\r\n\r\nconst Checkout = (props) => {\r\n\r\n    const {location:{state},history:{push}} = props\r\n    const {totalPrice,totalItems} = state\r\n\r\n    const {serverDomain} = useContext(GlobalVariableContext)\r\n\r\n    const paypalRef = useRef()\r\n\r\n    useEffect(() => {\r\n\r\n        window.paypal.Button.render({\r\n            env : 'sandbox',\r\n            style : {\r\n                color : 'gold',\r\n                shape : 'rect',\r\n                size : 'large',\r\n                label : 'paypal',\r\n                layout : 'vertical',\r\n            },\r\n            funding: {\r\n                allowed: [ window.paypal.FUNDING.CARD ],\r\n                disallowed: [ window.paypal.FUNDING.CREDIT ]\r\n            },\r\n            payment : async function () \r\n            {\r\n                const userToken = getUserToken()\r\n                if(!userToken) return\r\n                const response = await axios.post(`${serverDomain}/user/createPayment`,{\r\n                    amount : totalPrice\r\n                },getAxiosHeader(userToken))\r\n                return response.data.id\r\n\r\n            },\r\n            onAuthorize : async function(data) \r\n            {\r\n                const userToken = getUserToken()\r\n                if(!userToken) return\r\n                const {paymentID,payerID} = data\r\n                const response = await axios.post(`${serverDomain}/user/executePayment`,{\r\n                        paymentID,\r\n                        payerID,\r\n                        amount : totalPrice,\r\n                        items : totalItems\r\n                },getAxiosHeader(userToken))\r\n                console.log(response.data)\r\n                push('/dashboard/shop')\r\n                return\r\n            }\r\n        },paypalRef.current)\r\n\r\n        return () => {\r\n            paypalRef.current = null\r\n        }\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"checkout\">\r\n            <div className=\"checkoutHeader\">\r\n                <div className=\"checkoutTitle\">Pay <span className=\"checkoutAmount\">₹ {totalPrice}</span></div>\r\n            </div>\r\n            <div className=\"paypalCheckout\" ref={paypalRef}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":43,"column":7,"nodeType":"96","endLine":43,"endColumn":20,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":25,"column":7,"nodeType":"96","endLine":25,"endColumn":26,"suggestions":"99"},{"ruleId":"100","severity":1,"message":"101","line":13,"column":12,"nodeType":"102","messageId":"103","endLine":13,"endColumn":19},{"ruleId":"94","severity":1,"message":"104","line":27,"column":7,"nodeType":"96","endLine":27,"endColumn":9,"suggestions":"105"},{"ruleId":"90","replacedBy":"106"},{"ruleId":"92","replacedBy":"107"},{"ruleId":"100","severity":1,"message":"101","line":17,"column":12,"nodeType":"102","messageId":"103","endLine":17,"endColumn":19},{"ruleId":"94","severity":1,"message":"108","line":23,"column":7,"nodeType":"96","endLine":23,"endColumn":9,"suggestions":"109"},{"ruleId":"94","severity":1,"message":"110","line":26,"column":7,"nodeType":"96","endLine":26,"endColumn":21,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"112","line":62,"column":7,"nodeType":"96","endLine":62,"endColumn":9,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authenticateUser'. Either include it or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'sliderImages.length'. Either include it or remove the dependency array.",["117"],"no-unused-vars","'loading' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchShopItems'. Either include it or remove the dependency array.",["118"],["114"],["115"],"React Hook useEffect has a missing dependency: 'fetchCartItems'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'changeQuantity'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'push', 'serverDomain', 'totalItems', and 'totalPrice'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [authenticateUser, currentUser]",{"range":"134","text":"135"},"Update the dependencies array to be: [currentImageIndex, sliderImages.length]",{"range":"136","text":"137"},"Update the dependencies array to be: [fetchShopItems]",{"range":"138","text":"139"},"Update the dependencies array to be: [fetchCartItems]",{"range":"140","text":"141"},"Update the dependencies array to be: [changeQuantity, itemQuantity]",{"range":"142","text":"143"},"Update the dependencies array to be: [push, serverDomain, totalItems, totalPrice]",{"range":"144","text":"145"},[1247,1260],"[authenticateUser, currentUser]",[784,803],"[currentImageIndex, sliderImages.length]",[826,828],"[fetchShopItems]",[649,651],"[fetchCartItems]",[732,746],"[changeQuantity, itemQuantity]",[2059,2061],"[push, serverDomain, totalItems, totalPrice]"]